server {
    listen 80;
    server_name localhost;
    return 307 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    location /auth/logwith42 {
        proxy_pass http://ruby_user_management:4567/auth/logwith42;
    }

    location /auth/callback {
        proxy_pass http://ruby_user_management:4567/auth/callback;
    }

    location /auth/register {
        proxy_pass http://ruby_user_management:4567;
        proxy_method POST;
    }

    location /auth/login {
        proxy_pass http://ruby_user_management:4567/auth/login;
    }

    location /auth/refresh {
        proxy_pass http://ruby_user_management:4567/auth/refresh;
    }

    location /auth/verify {
        proxy_pass http://ruby_user_management:4567/auth/verify;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        internal;
    }

    location /user/ {
        auth_request /auth/verify;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567;
        proxy_set_header Authorization $http_authorization;
    }

    location @error401 {
        return 401 'Unauthorized';
        add_header Content-Type text/plain;
    }

    location @error403 {
        return 403 'Forbidden';
        add_header Content-Type text/plain;
    }

    location /ssr/ {
        proxy_pass http://ruby_ssr:4568/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
