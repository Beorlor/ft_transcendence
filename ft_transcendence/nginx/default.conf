events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

        # Public Routes (Token management)
        location /auth/signup {
            proxy_pass http://ruby_user_management:4567/auth/signup;
        }

        location /auth/login {
            proxy_pass http://ruby_user_management:4567/auth/login;
        }

        location /auth/refresh {
            proxy_pass http://ruby_user_management:4567/auth/refresh;
        }

        location /auth/verify {
            proxy_pass http://ruby_user_management:4567/auth/verify;
        }

        # Protected Routes (User management)
        location /user/ {
            proxy_pass http://ruby_user_management:4567;
            auth_request /auth/verify_token;
        }

        location /auth/verify_token {
            proxy_pass http://ruby_user_management:4567/auth/verify;
            proxy_set_header Content-Type application/json;
            proxy_pass_request_body off;
            proxy_set_header Authorization $http_authorization;

            error_page 401 = @error401;
        }

        location @error401 {
            return 401 'Unauthorized';
            add_header Content-Type text/plain;
        }

        # Reverse proxy for SSR (Public)
        location /ssr/ {
            proxy_pass http://ruby_ssr:4568/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
